#include <bits/stdc++.h> 
/*
    Following is Binary Tree Node structure:
    class TreeNode
    {
    public:
        int data;
        TreeNode *left, *right;
        TreeNode() : data(0), left(NULL), right(NULL) {}
        TreeNode(int x) : data(x), left(NULL), right(NULL) {}
        TreeNode(int x, TreeNode *left, TreeNode *right) : data(x), left(left), right(right) {}
    };
*/
vector<int> getPreOrderTraversal(TreeNode *root)
{
    // Write your code here.
    vector<int> preorder;
    if (root == NULL)
        return preorder;
    stack<TreeNode *> s;
    s.push(root);
    while (!s.empty())
    {
        root = s.top();
        s.pop();
        preorder.push_back(root->data);
        if (root->right != NULL)
            s.push(root->right);
        if (root->left != NULL)
            s.push(root->left);
    }
    return preorder;
}
